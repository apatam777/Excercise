import ballerina/grpc;
import ballerina/mongodb;

listener grpc:Listener ep = new (9090);

service statistics on ep {

    resource function sent_Information(grpc:Caller caller, COVID_info value) {
        // Implementation goes here.

         mongodb:ClientConfig mongoConfig = {
            host: "localhost",
            port: 9090,
            // username: "",
            // password: "",
            options: {sslEnabled: false, serverSelectionTimeout: 50}
        };

        mongodb:Client mongoClient = checkpanic new (mongoConfig);
        mongodb:Database mongoDatabase = checkpanic mongoClient->getDatabase("Covid1_info");
        mongodb:Collection mongoCollection = checkpanic mongoDatabase->getCollection("stats");

        map<json> info = {
            
            regionName: value.regionName, 
            date: value.date,
            num_deaths: value.num_deaths, 
            num_Cases: value.num_Cases,
            num_Recoveries: value.num_Recoveries, 
            num_Tests: value.num_Tests};

            checkpanic mongoCollection->insert(info);

        // You should return a success
    }
}

public type COVID_info record {|
    string regionName = "";
    string date = "";
    int num_deaths = 0;
    int num_Cases = 0;
    int num_Recoveries = 0;
    int num_Tests = 0;
    
|};

public type success record {|
    string confirmation = "";
    
|};



const string
function getDescriptorMap() returns map<string> {
    return {
        "stats.proto":"0A0B73746174732E70726F746F1207736572766963651A1E676F6F676C652F70726F746F6275662F77726170706572732E70726F746F22C0010A0A434F5649445F696E666F121E0A0A726567696F6E4E616D65180120012809520A726567696F6E4E616D6512120A0464617465180220012809520464617465121D0A0A6E756D5F64656174687318032001280552096E756D446561746873121B0A096E756D5F436173657318042001280552086E756D436173657312250A0E6E756D5F5265636F766572696573180520012805520D6E756D5265636F766572696573121B0A096E756D5F546573747318062001280552086E756D5465737473222D0A077375636365737312220A0C636F6E6669726D6174696F6E180120012809520C636F6E6669726D6174696F6E32470A0A7374617469737469637312390A1073656E745F496E666F726D6174696F6E12132E736572766963652E434F5649445F696E666F1A102E736572766963652E73756363657373620670726F746F33",
        "google/protobuf/wrappers.proto
        
    };
}

